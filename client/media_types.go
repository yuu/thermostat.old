// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "thermostat": Application Media Types
//
// Command:
// $ goagen
// --design=thermostat/design
// --out=$(GOPATH)/src/thermostat
// --version=v1.2.0-dirty

package client

import (
	"net/http"
)

// any thermostat info (default view)
//
// Identifier: application/json; view=default
type JSON struct {
	CurrentHeatingCoolingState int `form:"currentHeatingCoolingState" json:"currentHeatingCoolingState" xml:"currentHeatingCoolingState"`
	CurrentRelativeHumidity    int `form:"currentRelativeHumidity" json:"currentRelativeHumidity" xml:"currentRelativeHumidity"`
	CurrentTemperature         int `form:"currentTemperature" json:"currentTemperature" xml:"currentTemperature"`
	TargetHeatingCoolingState  int `form:"targetHeatingCoolingState" json:"targetHeatingCoolingState" xml:"targetHeatingCoolingState"`
	TargetRelativeHumidity     int `form:"targetRelativeHumidity" json:"targetRelativeHumidity" xml:"targetRelativeHumidity"`
	TargetTemperature          int `form:"targetTemperature" json:"targetTemperature" xml:"targetTemperature"`
}

// Validate validates the JSON media type instance.
func (mt *JSON) Validate() (err error) {

	return
}

// DecodeJSON decodes the JSON instance encoded in resp body.
func (c *Client) DecodeJSON(resp *http.Response) (*JSON, error) {
	var decoded JSON
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
